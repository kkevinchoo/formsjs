class formsjs{static init(t,i,e={}){this.container=document.getElementById(t),this.quizData=i,this.config={mode:e.mode||"inline",colors:{background:e.colors?.background||"#f0f0f0",question:e.colors?.question||"#333333",button:e.colors?.button||["#E21B3C","#1368CE","#D89E00","#26890C"],buttonText:e.colors?.buttonText||"#ffffff",timer:e.colors?.timer||"#FF8800",modalBackground:e.colors?.modalBackground||"rgba(0, 0, 0, 0.8)"},timer:void 0===e.timer?20:e.timer,height:e.height||"auto",width:e.width||"100%",fontSize:e.fontSize||"1.6",onFinish:e.onFinish||((t,i)=>{alert(`Quiz finalizado. Puntuación: ${t}/${i}`)}),onAnswer:e.onAnswer||((t,i)=>{})},this.currentQuestionIndex=0,this.score=0,this.startQuiz()}static startQuiz(){"modal"===this.config.mode&&this.createModal(),this.showQuestion()}static createModal(){this.modal=document.createElement("div"),this.modal.style.position="fixed",this.modal.style.top="0",this.modal.style.left="0",this.modal.style.width="100%",this.modal.style.height="100%",this.modal.style.background=this.config.colors.modalBackground,this.modal.style.display="flex",this.modal.style.alignItems="center",this.modal.style.justifyContent="center",this.modal.innerHTML=`<div id="quiz-modal-content" style="background:${this.config.colors.background}; padding:20px; border-radius:10px; width:80%; max-width:600px;"></div>`,document.body.appendChild(this.modal),this.container=document.getElementById("quiz-modal-content")}static showQuestion(){if(this.currentQuestionIndex>=this.quizData.questions.length)return void this.showResults();const t=this.quizData.questions[this.currentQuestionIndex];let i="";t.answers.forEach(((t,e)=>{let n="";t.icon&&(n=`<i class="${t.icon}" style="font-size: 1.5em; margin: 5px;"></i>`);let s="";t.image&&(s=`<img src="${t.image}" alt="${t.text}" style="max-width:50px; max-height:50px; margin:5px;">`);let o="";switch(t.iconPosition){case"top":o=`<div style="display:flex; flex-direction:column; align-items:center;">\n                                  ${n||s}\n                                  <span>${t.text}</span>\n                                 </div>`;break;case"bottom":o=`<div style="display:flex; flex-direction:column; align-items:center;">\n                                  <span>${t.text}</span>\n                                  ${n||s}\n                                 </div>`;break;case"left":o=`<div style="display:flex; align-items:center;">\n                                  ${n||s}\n                                  <span>${t.text}</span>\n                                 </div>`;break;default:o=`<div style="display:flex; align-items:center; justify-content:space-between;">\n                                  <span>${t.text}</span>\n                                  ${n||s}\n                                 </div>`}const r=this.config.colors.button[e%this.config.colors.button.length];i+=`\n                  <button class="answer-button" data-index="${e}" style="background-color:${r}; color:${this.config.colors.buttonText}; margin:5px; padding:10px; border:none; border-radius:5px; cursor:pointer; width: ${this.config.width}; height: ${this.config.height}; display:flex; justify-content:center; align-items:center; font-size:${this.config.fontSize};">\n                      ${o}\n                  </button>\n              `})),this.container.innerHTML=`\n              <div class="quiz-container" style="text-align:center; background-color:${this.config.colors.background}; padding:20px; border-radius:10px;">\n                  <h2 class="quiz-question" style="color:${this.config.colors.question};">${t.question}</h2>\n                  ${t.image?`<img src="${t.image}" class="quiz-image" style="max-width:100%; margin-bottom:10px;">`:""}\n                  ${t.icon?`<i class="${t.icon}" style="font-size:2em; margin-bottom:10px;"></i>`:""}\n                  <div class="quiz-answers" style="display:grid; grid-template-columns:repeat(auto-fit, minmax(200px, 1fr)); gap:10px;">${i}</div>\n                  ${this.config.timer?`<div class="quiz-timer" style="margin-top:20px; font-size:1.5em; color:${this.config.colors.timer};">⏳ ${this.config.timer}s</div>`:""}\n              </div>\n          `,document.querySelectorAll(".answer-button").forEach((t=>{t.addEventListener("click",(t=>{const i=t.target.closest(".answer-button").getAttribute("data-index");this.checkAnswer(Number.parseInt(i))}))})),this.config.timer&&this.startTimer()}static startTimer(){let t=this.config.timer;const i=document.querySelector(".quiz-timer");this.timerInterval&&clearInterval(this.timerInterval),this.timerInterval=setInterval((()=>{t--,i.textContent=`⏳ ${t}s`,t<=0&&(clearInterval(this.timerInterval),this.nextQuestion())}),1e3)}static checkAnswer(t){this.timerInterval&&clearInterval(this.timerInterval);const i=this.quizData.questions[this.currentQuestionIndex],e=i.answers[t].correct;e&&this.score++,this.config.onAnswer(e,i.answers[t]),this.nextQuestion()}static nextQuestion(){this.currentQuestionIndex++,this.showQuestion()}static showResults(){this.container.innerHTML=`\n              <div style="text-align:center; background-color:${this.config.colors.background}; padding:20px; border-radius:10px;">\n                  <h1 style="font-size:2em; color:${this.config.colors.question};">QUIZ FINALIZADO</h1>\n                  <p style="font-size:1.5em; color:${this.config.colors.question};">Puntuación: ${this.score}/${this.quizData.questions.length}</p>\n              </div>\n          `,this.config.onFinish(this.score,this.quizData.questions.length),"modal"===this.config.mode&&setTimeout((()=>{document.body.removeChild(this.modal)}),3e3)}}
